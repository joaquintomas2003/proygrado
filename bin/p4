#!/usr/bin/env bash

set -euo pipefail

COMMAND=${1:-}
shift || true

CWD="$(pwd)"

# Allow overriding output paths via environment variables
FIRMWARE_PATH="${FIRMWARE_PATH:-$CWD/out/firmware.nffw}"
PIF_JSON_PATH="${PIF_JSON_PATH:-$CWD/pifout/pif_design.json}"

# Allow configuring rtecli connection details
RTE_HOST="${RTE_HOST:-localhost}"
RTE_PORT="${RTE_PORT:-20206}"
DEVICE_ID="${DEVICE_ID:-0}"

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Check required tools
command -v /opt/netronome/p4/bin/nfp4build >/dev/null 2>&1 || { echo -e "${RED}❌ nfp4build not found${NC}"; exit 1; }
command -v /opt/netronome/p4/bin/rtecli >/dev/null 2>&1 || { echo -e "${RED}❌ rtecli not found${NC}"; exit 1; }

case "$COMMAND" in
  build)
    if [ $# -lt 1 ]; then
      echo -e "${RED}❌ Please specify the .p4 file to compile.${NC}"
      echo "Usage: bin/p4 build path/to/your_file.p4 [extra nfp4build args]"
      exit 1
    fi

    P4_FILE="$1"
    shift
    EXTRA_ARGS=("$@")

    if [ ! -f "$P4_FILE" ]; then
      echo -e "${RED}❌ File not found: $P4_FILE${NC}"
      exit 1
    fi

    echo -e "${GREEN}Compiling $P4_FILE...${NC}"
    mkdir -p "$(dirname "$FIRMWARE_PATH")" pifout

    /opt/netronome/p4/bin/nfp4build \
      --nfp4c_p4_version 16 \
      --no-debug-info \
      -p pifout \
      -o "$FIRMWARE_PATH" \
      -l lithium \
      --shared-codestore \
      -d flowcache \
      --include /opt/netronome/p4/components/flowcache/me/lib/flowcache \
      -4 "$P4_FILE" \
      --nfirc_mac_ingress_timestamp \
      "${EXTRA_ARGS[@]}"

    echo -e "${GREEN}✅ Compilation complete: $FIRMWARE_PATH${NC}"
    ;;

  buildc)
    if [ $# -lt 1 ]; then
      echo -e "${RED}❌ Please specify the .p4 file to compile.${NC}"
      echo "Usage: bin/p4 buildc path/to/your_file.p4 [extra nfp4build args]"
      exit 1
    fi

    P4_FILE="$1"
    shift
    EXTRA_ARGS=("$@")

    if [ ! -f "$P4_FILE" ]; then
      echo -e "${RED}❌ File not found: $P4_FILE${NC}"
      exit 1
    fi

    echo -e "${GREEN}Compiling $P4_FILE with main.c...${NC}"
    mkdir -p "$(dirname "$FIRMWARE_PATH")" pifout

    /opt/netronome/p4/bin/nfp4build \
      --nfp4c_p4_version 16 \
      --no-debug-info \
      -p pifout \
      -o "$FIRMWARE_PATH" \
      -l lithium \
      --shared-codestore \
      --verbose-generate \
      --verbose-build \
      -d flowcache \
      --include /opt/netronome/p4/components/flowcache/me/lib/flowcache \
      -4 "$P4_FILE" \
      -c main.c \
      "${EXTRA_ARGS[@]}"

    echo -e "${GREEN}✅ Compilation complete: $FIRMWARE_PATH${NC}"
    ;;

  design-load)
    echo -e "${GREEN}Loading firmware from $FIRMWARE_PATH...${NC}"
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" design-load -f "$FIRMWARE_PATH" -p "$PIF_JSON_PATH"
    echo -e "${GREEN}✅ Firmware loaded${NC}"
    ;;

  config-load)
    if [ $# -lt 1 ]; then
      echo -e "${RED}❌ Please specify the config file to load.${NC}"
      exit 1
    fi

    CONFIG_FILE="$1"

    if [ ! -f "$CONFIG_FILE" ]; then
      echo -e "${RED}❌ File not found: $CONFIG_FILE${NC}"
      exit 1
    fi

    echo -e "${GREEN}Reloading configuration from $CONFIG_FILE...${NC}"
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" config-reload -c "$CONFIG_FILE"
    echo -e "${GREEN}✅ Configuration reloaded${NC}"
    ;;

  list-tables)
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" tables list
    ;;

  list-table)
    if [ $# -lt 1 ]; then
      echo -e "${RED}❌ Please specify the ID of the table.${NC}"
      exit 1
    fi

    TABLE_ID="$1"

    echo -e "${GREEN}Listing rules for table $TABLE_ID...${NC}"
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" tables list-rules -i "$TABLE_ID"
    ;;

  status)
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" status
    ;;

  unload)
    echo -e "${GREEN}Unloading firmware...${NC}"
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" design-unload
    echo -e "${GREEN}✅ Firmware unloaded${NC}"
    ;;

  show-counters)
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" counters list
    ;;

  rtecli)
    echo -e "${GREEN}Running rtecli with arguments: $*${NC}"
    /opt/netronome/p4/bin/rtecli -r "$RTE_HOST" -p "$RTE_PORT" -d "$DEVICE_ID" "$@"
    ;;

  nfp4build)
    echo -e "${GREEN}Running nfp4build with arguments: $*${NC}"
    /opt/netronome/p4/bin/nfp4build "$@"
    ;;

  help|--help|-h|"")
    echo "Usage: bin/p4 [command] [options]"
    echo ""
    echo "Commands:"
    echo "  build <file.p4> [extra args]           Compile the P4 program (output in ./out/)"
    echo "  buildc <file.p4> [extra args]          Compile the P4 program with main.c"
    echo "  design-load                            Load compiled firmware from ./out/"
    echo "  config-load <config file>              Reload config from <config file>"
    echo "  list-tables                            Show all tables"
    echo "  list-table <table id>                  Show rules for the given table"
    echo "  show-counters                          Show hardware counters"
    echo "  status                                 Show firmware load status"
    echo "  unload                                 Unload the currently loaded firmware"
    echo "  nfp4build **                           Run nfp4build with custom args"
    echo "  rtecli **                              Run rtecli with custom args"
    echo "  help                                   Show this help message"
    echo ""
    echo "Environment overrides:"
    echo "  FIRMWARE_PATH, PIF_JSON_PATH           Override default output locations"
    echo "  RTE_HOST, RTE_PORT, DEVICE_ID          Control rtecli connection details"
    ;;

  *)
    echo -e "${RED}❌ Unknown command: $COMMAND${NC}"
    echo "Use 'bin/p4 help' to see available commands."
    exit 1
    ;;
esac
